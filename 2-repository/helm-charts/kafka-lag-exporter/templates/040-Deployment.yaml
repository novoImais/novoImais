apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-lag-exporter.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "kafka-lag-exporter.name" . }}
    helm.sh/chart: {{ include "kafka-lag-exporter.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kafka-lag-exporter.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kafka-lag-exporter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if or .Values.watchers.strimzi .Values.serviceAccount.create }}
      {{- if .Values.serviceAccount.nameOverride }}
      serviceAccountName: {{ .Values.serviceAccount.nameOverride }}
      {{- else }}
      serviceAccountName: {{ include "kafka-lag-exporter.fullname" . }}-serviceaccount
      {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.image.digest }}
          image: "{{ .Values.image.repository }}@{{ .Values.image.digest }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.env }}
          env:
{{ toYaml .Values.env | indent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.securityContext }}
          securityContext:
{{ toYaml .Values.securityContext | indent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.livenessProbeInitialDelay }}
            periodSeconds: {{ .Values.livenessProbePeriodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbeTimeout }}
            failureThreshold: {{ .Values.livenessProbeFailureThreshold }}
            successThreshold: {{ .Values.livenessProbeSuccessThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.readinessProbeInitialDelay }}
            periodSeconds: {{ .Values.readinessProbePeriodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbeTimeout }}
            failureThreshold: {{ .Values.readinessProbeFailureThreshold }}
            successThreshold: {{ .Values.readinessProbeSuccessThreshold }}
          volumeMounts:
            - name: config-volume
              mountPath: /opt/docker/conf/
          {{- range .Values.extraConfigmapMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
          {{- range .Values.extraMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.initContainers }}
      initContainers: {{ toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "kafka-lag-exporter.fullname" . }}-configmap
      {{- range .Values.extraConfigmapMounts }}
        - name: {{ .name }}
          configMap:
            name: {{ .configMap }}
      {{- end }}
      {{- range .Values.extraMounts }}
        - name: {{ .name }}
{{ toYaml .mount | indent 10 }}
      {{- end }}
